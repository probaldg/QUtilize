@model QBA.Qutilize.WebApp.Models.ModuleModel

@{
    ViewBag.Title = "ManageModule";
    Layout = "~/Views/Shared/_ViewStartPrivate.cshtml";
}

<style>
    .txtbox {
        display: block;
        float: left;
        height: 32px;
        width: 100px;
    }

    .btncls {
        display: block;
        float: left;
        height: 40px;
        margin: 0px -44px 1px;
        width: 41px;
    }
</style>

@{
    var strMSGforSave = string.Empty;
    string strStyle = string.Empty;
    var ErrStatus = TempData["ErrStatus"];
    if (ErrStatus != null)
    {
        strMSGforSave = ErrStatus.ToString();
    }
    if (strMSGforSave != "")
    {
        strStyle = "display:block";
    }
    else
    {
        strStyle = "display:none";
    }
}
<div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">
    <table class="table table-striped table-bordered myTable" id="tblGridListViewPost">
        <thead id="tblHeadListViewPost">
            <tr>
                <th class="text-center tblHeaderColor">ID</th>
                <th class="text-center tblHeaderColor">Name</th>
                <th class="text-center tblHeaderColor">URL</th>
                <th class="text-center tblHeaderColor">Display Name</th>
                <th class="text-center tblHeaderColor">Display CSS</th>
                <th class="text-center tblHeaderColor">Active</th>
                <th class="text-center tblHeaderColor">Action</th>
            </tr>
        </thead>
        <tbody>
            @Html.Action("Modules", "Admin")
        </tbody>
    </table>
</div>


<div class="col-md-12"><br /></div>
@*@using (Html.BeginForm("ManageOrganisation", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal popup" }))*@
@using (Html.BeginForm("ManageModule", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal popup" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">
    <h4>Module Details</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">            
            @Html.DropDownListFor(model => model.ParentID, Model.ModuleList, new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DisplayCSS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisplayCSS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayCSS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DisplayIcon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisplayIcon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayIcon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rank, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Rank, Enumerable.Range(1, 100).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.isActive)
                @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.isActive, new { @class = "form-control" })
            </div>
        </div>*@



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            @*<a href="Landing" class="btn btn-default">Back </a>*@
        </div>
    </div>

}
<script>
    $("#tblGridListViewPost").dataTable();
</script>