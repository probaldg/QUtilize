@model QBA.Qutilize.WebApp.Models.UserModel

@{
    ViewBag.Title = "ManageUsers";
    Layout = "~/Views/Shared/_ViewStartPrivate.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ManageUsers</title>
</head>
<body>

    @{
        var strMSGforSave = string.Empty;
        string strStyle = string.Empty;

        var strMsgforErr = string.Empty;
        var strmsgStyle = string.Empty;

        var errSts = TempData["ErrMsg"];

        var ErrStatus = TempData["ErrStatus"];
        if (ErrStatus != null)
        {
            strMSGforSave = ErrStatus.ToString();
        }
        if (strMSGforSave != "")
        {
            strStyle = "display:block";
        }
        else
        {
            strStyle = "display:none";
        }

    }

    <div class="form-horizontal col-md-12">
        <div class="alert alert-warning alert-dismissible" role="alert" style="@strStyle">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            Data Saved Successfully!!!
        </div>
    </div>

    <h4>Manage User</h4>
    <br />
    <div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">
        <table class="table table-striped table-bordered myTable" id="tblGridListViewPost">
            <thead id="tblHeadListViewPost">
                <tr>
                    <th class="text-center">ID</th>
                    <th class="text-center">User Name</th>
                    <th class="text-center">Name</th>
                    <th class="text-center">Email</th>
                    <th class="text-center">Designation</th>
                    <th class="text-center">Manager Name</th>
                    <th class="text-center">Status</th>
                    <th class="text-center">Edit</th>
                </tr>
            </thead>
            <tbody>
                @Html.Action("LoadUsersData", "Admin")
            </tbody>
        </table>
    </div>
    <div class="col-md-12"><br /></div>
    <div class="form-horizontal col-md-12">
        <div class="alert alert-danger alert-dismissable fade in" id="ErrorMsg" name="ErrorMsg" style="display:none">
            <span id="errormsg"></span>
        </div>
    </div>
    @using (Html.BeginForm("ManageUsers", "Admin", FormMethod.Post, new { onsubmit = "return checkUserForm()" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">
        <h4>User Details</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)


        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (Model.ID > 0)
        {
            <div class="form-group">
                @Html.Label("", new { @class = "control-label col-md-2" })
                <div class="col-md-10 pull-right">
                    @*@Html.ActionLink("Change Password", "#", new { id = Model.ID }, new { @class = "editCourseModal", @data_target = "updatePasswordModal" })*@
                    <a href="" data-toggle="modal" data-target="#updatePasswordModal">Change Password</a>

                </div>
            </div>
        }
        else
        {

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsersList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UsersList, new SelectList(Model.UsersList, "ID", "Name"), "Please select", new { @class = "form-control" })
                @Html.HiddenFor(model => model.ManagerId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div id="updatePasswordModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="button" class="btn btn-default" id="updatePassword">Update</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">

                </div>
            </div>

        </div>
    </div>

    <script type="text/javascript">

        $("#tblGridListViewPost").dataTable();

        var managerId = $('#ManagerId').val();
        if (managerId != 0) {
            $('#UsersList').val(managerId);
        }

        $("#UsersList").change(function () {
            var managerID = $("#UsersList").val();
            $('#ManagerId').val(managerID);

        });

        $("#EmailId").blur(function () {
        var id = document.getElementById("ID").value;
        if (id == 0) {
            var email = $("#EmailId").val();
            if (email != "") {

                $.ajax({
                    url: '@Url.Action("Checkemail", "Admin")',
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        "email": email,
                    }),
                    success: function (response) {
                        console.log(response);
                        if (response == "Duplicate") {
                            document.getElementById("errormsg").innerHTML = "E-Mail allready exist.";
                            document.getElementById("ErrorMsg").style.display = 'block';

                        }
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            } else {
                document.getElementById("errormsg").innerHTML = "Please provide valid Email.";
                document.getElementById("ErrorMsg").style.display = 'block';

                return false;

            }
        }
    });
        function checkUserForm() {

            var id = document.getElementById("ID").value;
            var userName = document.getElementById("UserName").value;
            var name = document.getElementById("Name").value;

            var Email = document.getElementById("EmailId").value;
            if (userName == "") {
                document.getElementById("errormsg").innerHTML = "Please Provide User's User Name";
                document.getElementById("ErrorMsg").style.display = 'block';
                //document.getElementById("UserName").focus();
                //document.getElementById("UserName").style.borderColor = "Red";
                return false;
            }

            if (name == "") {
                document.getElementById("errormsg").innerHTML = "Please Provide User's name";
                document.getElementById("ErrorMsg").style.display = 'block';
                //document.getElementById("Name").focus();
                //document.getElementById("Name").style.borderColor = "Red";

                return false;
            }


            if (Email == "") {
                document.getElementById("errormsg").innerHTML = "Please Provide User's email";
                document.getElementById("ErrorMsg").style.display = 'block';
                //document.getElementById("EmailId").focus();
                //document.getElementById("EmailId").style.borderColor = "Red";
                return false;
            }
            if (Email != "") {
                var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                if (regex.test(Email) == false) {
                    document.getElementById("errormsg").innerHTML = "Please provide valid Email";
                    document.getElementById("ErrorMsg").style.display = 'block';
                    //document.getElementById("EmailId").focus();
                    //document.getElementById("EmailId").style.borderColor = "Red";
                    return false;
                }
            }


            if (id > 0) {
                var oldpassword = document.getElementById("oldpassword").value;
                if (oldpassword == "") {
                    document.getElementById("errormsg").innerHTML = "Please enter your old password";
                    document.getElementById("ErrorMsg").style.display = 'block';
                    return false;
                }
                var password = document.getElementById("Password").value;
                var confirmpassword = document.getElementById("confirmpassword").value;

                if (password != "") {
                    if (confirmpassword == "") {
                        document.getElementById("errormsg").innerHTML = "Please confirm your Password";
                        document.getElementById("ErrorMsg").style.display = 'block';
                        return false;
                    }
                    if (password != confirmpassword) {
                        document.getElementById("errormsg").innerHTML = "Password and Confirm Password Mismatched";
                        document.getElementById("ErrorMsg").style.display = 'block';
                        return false;
                    }

                } else {

                    return true;
                }
            } else {

                var password = document.getElementById("Password").value;
                var confirmpassword = document.getElementById("ConfirmPassword").value;

                if (password == "") {
                    document.getElementById("errormsg").innerHTML = "Please provide your Password";
                    document.getElementById("ErrorMsg").style.display = 'block';
                    //document.getElementById("Password").focus();
                    //document.getElementById("Password").style.borderColor = "Red";
                    return false;
                }
                if (password != "") {
                    if (confirmpassword == "") {
                        document.getElementById("errormsg").innerHTML = "Please confirm your Password";
                        document.getElementById("ErrorMsg").style.display = 'block';
                        //document.getElementById("ConfirmPassword").focus();
                        //document.getElementById("ConfirmPassword").style.borderColor = "Red";
                        return false;
                    }
                    if (password != confirmpassword) {
                        document.getElementById("errormsg").innerHTML = "Password and Confirm Password Mismatched";
                        document.getElementById("ErrorMsg").style.display = 'block';
                        return false;
                    }

                } else {

                    return true;
                }
            }
            return true;
        }

         $("#updatePassword").bind("click", function () {

             var password = $("#Password").val();
             var UpdatePassword = $("#ConfirmPassword").val();
             if (password != UpdatePassword) {
                 document.getElementById("errormsg").innerHTML = "Password and Confirm Password Mismatched";
                 document.getElementById("ErrorMsg").style.display = 'block';
                 return false;

             }
             //alert(UpdatePassword);
         $.ajax({
            url: '@Url.Action("UpdatePassword", "Admin")',
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            data: JSON.stringify({
                "Password": password,
                "id":  @Model.ID
            }),

            success: function (response) {
                //jQuery('#myEditModal').modal('show');
                    alert(response );
                //alert(response[0]._id)
            },
            error: function (response) {
                console.log(response);
            }
        });
    });
    </script>
</body>

</html>
