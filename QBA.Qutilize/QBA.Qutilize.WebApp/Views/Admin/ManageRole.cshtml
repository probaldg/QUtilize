@model QBA.Qutilize.WebApp.Models.RoleModel
@{
    ViewBag.Title = "Manage Role";
    Layout = "~/Views/Shared/_ViewStartPrivate.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Manage Roles</title>
</head>
<body>
    @{
        var strMSGforSave = string.Empty;
        string strStyle = string.Empty;

        var strMsgforErr = string.Empty;
        var strmsgStyle = string.Empty;

        var errSts = TempData["ErrMsg"];

        var ErrStatus = TempData["ErrStatus"];
        if (ErrStatus != null)
        {
            strMSGforSave = ErrStatus.ToString();
        }
        if (strMSGforSave != "")
        {
            strStyle = "display:block";
        }
        else
        {
            strStyle = "display:none";
        }

    }
    <div class="form-horizontal col-md-12">
        <div class="alert alert-warning alert-dismissible" role="alert" style="@strStyle">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            Data Saved Successfully!!!
        </div>
    </div>
    <h4>Manage Roles</h4>
    <br />

    <div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">
        <table class="table table-striped table-bordered myTable" id="tblGridListViewPost">
            <thead id="tblHeadListViewPost">
                <tr>
                    <th class="text-center tblHeaderColor">ID</th>
                    <th class="text-center tblHeaderColor">Role Name</th>
                    <th class="text-center tblHeaderColor">Description</th>
                    <th class="text-center tblHeaderColor">Organisation</th>
                    <th class="text-center tblHeaderColor">Active</th>
                    <th class="text-center tblHeaderColor">Edit</th>

                </tr>
            </thead>
            <tbody>
                @Html.Action("LoadRoleData", "Admin")
            </tbody>
        </table>
    </div>
    <div class="col-md-12"><br /></div>
    <div class="form-horizontal col-md-12">
        <div class="alert alert-danger alert-dismissable fade in" id="ErrorMsg" name="ErrorMsg" style="display:none">
            <span id="errormsg"></span>
        </div>
    </div>


    @using (Html.BeginForm("ManageRole", "Admin", FormMethod.Post, new { onsubmit = "return checkUserForm()" }))
    {
        @Html.AntiForgeryToken()
        <h4>Role Details</h4>
        <hr />

        <div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OrganisationList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.OrganisationList, new SelectList(Model.OrganisationList, "id", "orgname"), "Please select", new { @class = "form-control" })
                    @Html.HiddenFor(model => model.RolesOrgID)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <script type="text/javascript">
        $("#tblGridListViewPost").dataTable();
        $('#OrganisationList').change(function () {
            var OrgId = $('#OrganisationList').val();
            $('#RolesOrgID').val(OrgId)

        });

        var orgId = $('#RolesOrgID').val();

        if (orgId != 0) {
            $('#OrganisationList').val(orgId);
            if ($('#OrganisationList option').length == 2) {
                $("#OrganisationList").prop("disabled", true);
            }

        }




        function checkUserForm() {

            var RoleName = document.getElementById("Name").value;
            var OrgId = $('#OrganisationList').val();
            if (RoleName == "") {
                document.getElementById("errormsg").innerHTML = "Please Provide Role Name";
                document.getElementById("ErrorMsg").style.display = 'block';

                return false;
            }

            if (OrgId == "" || OrgId ==0) {
                document.getElementById("errormsg").innerHTML = "Please select organisation Name";
                document.getElementById("ErrorMsg").style.display = 'block';

                return false;
            }
            return true;
        }
    </script>
</body>
</html>

