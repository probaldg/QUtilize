@model QBA.Qutilize.WebApp.Models.DailyTaskModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_ViewStartPrivate.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Daily Task</title>
</head>
<body>
    @{
        var strMSGforSave = string.Empty;
        string strStyle = string.Empty;

        var strMsgforErr = string.Empty;
        var strmsgStyle = string.Empty;

        var errSts = TempData["ErrMsg"];

        var ErrStatus = TempData["ErrStatus"];
        if (ErrStatus != null)
        {
            strMSGforSave = ErrStatus.ToString();
        }
        if (strMSGforSave != "")
        {
            strStyle = "display:block";
        }
        else
        {
            strStyle = "display:none";
        }

    }

    <div class="form-horizontal col-md-12">
        <div class="alert alert-warning alert-dismissible" role="alert" style="@strStyle">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            Data Saved Successfully!!!
        </div>
    </div>
    <h4>Daily Task</h4>
    <br />
    @*@using (Html.BeginForm("InsertDailyTask", "DailyTask", FormMethod.Post, new { onsubmit = "return checkUserForm()" }))
        {
            @Html.AntiForgeryToken();*@

    <div class="form-horizontal col-md-12" style="border: 1px solid #f1f1f1; padding:15px">
        <table class="table table-bordered table-responsive table-hover">
            <thead>
                <tr>
                    <th>Task Date </th>
                    <th>Project</th>
                    <th>Task Name</th>
                    <th>Description</th>
                    <th>Start time</th>
                    <th>End time</th>
                    <th>Hours</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                @*@Html.Action("LoadProjectData", "Admin")*@
            </tbody>
            <tfoot>
                <tr>

                    <td>
                        @*@Html.EditorFor(model => model.TaskDate, new { htmlAttributes = new { @class = "form-control input-sm" } })*@
                        <input type="text" class="form-control input-sm" id="TaskDate">
                    </td>

                    <td>@Html.DropDownList("ProjectList", Model.ProjecSelectList, new { style = "width:180px; height:30px;" })</td>
                    <td>

                        <input type="text" class="form-control input-sm" id="TaskName">
                    </td>
                    <td>
                        <input type="text" class="form-control input-sm" id="Description">
                    </td>
                    <td>
                        <input type="text" class="form-control input-sm" id="StartTime">
                    </td>
                    <td>
                        <input type="text" class="form-control input-sm" id="EndTime">
                    </td>

                    <td colspan="3">
                        @*<input type="button" class="btn btn-primary" value="Create" onclick="location.href='@Url.Action("InsertDailyTask", "DailyTask")'" />*@
                        <input type="submit" value="Insert" class="btn btn-primary" id="btnInsert" />
                    </td>

                </tr>
            </tfoot>
        </table>
        <div class="form-horizontal col-md-12">
            <div class="alert alert-danger alert-dismissable fade in" id="ErrorMsg" name="ErrorMsg" style="display:none">
                <span id="errormsg"></span>
            </div>
        </div>
    </div>


    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">

    <script>
        $(document).ready(function () {
            $("#TaskDate").datepicker({
                minDate: -30,
                format: 'DD/MM/YYYY HH:mm:ss',
               // minDate: getFormattedDate(new Date())
            });
            function getFormattedDate(date) {
                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear().toString().slice(2);
                return day + '-' + month + '-' + year;
            }
            $('#StartTime').timepicker({
                 'scrollDefault': 'now'
            });
            $('#EndTime').timepicker({
                'scrollDefault': 'now'
            });
            $('#btnInsert').click(function () {

                var taskDate = $('#TaskDate').val();

                var projectID = $('#ProjectList').val();
                var taskName = $('#TaskName').val();
                var startTime = $('#StartTime').val();
                var endTime = $('#EndTime').val();
                var descreption = $('#Description').val();
                if (taskDate == "") {
                    ShowError("Task date is required..")
                    return false;
                }
                if (projectID == 0) {
                    ShowError("Please select a project..")
                    return false;
                }

                if (taskName == "") {
                    ShowError("Please insert task name");
                    return false;
                }

                if (startTime== "") {
                    ShowError("Plese insert start time");
                    return false;
                }
                if (endTime == "") {
                    ShowError("Plese insert end time");
                    return false;
                }

                $.ajax({
                    url: '@Url.Action("InsertDailyTask", "DailyTask")',
                    type: 'POST',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        "taskDate": taskDate,
                        "projectID": projectID,
                        "startTime": startTime,
                        "endTime":endTime,
                        "taskName": taskName,
                        "descreption": descreption
                    }), //Data end
                    success: function (response) {
                        alert(response);
                    }
                });// ajax end
            });// button click end


            function ValidateInsert() {

            }

            function ShowError( message) {
                document.getElementById("errormsg").innerHTML = message;
                document.getElementById("ErrorMsg").style.display = 'block';
            }
        });//Document ready end
    </script>
</body>
</html>
